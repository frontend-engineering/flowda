// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
  output        = "../../generated/prisma-02/@prisma/client"
}

generator zod {
  provider                  = "node ../../../../../../../node_modules/zod-prisma-types/dist/bundle/bin.js"
  output                    = "../../generated/prisma-02/zod" // default is ./generated/zod
//  useMultipleFiles          = true // default is false
  createInputTypes          = false // default is true
  // createModelTypes                 = false // default is true
  addInputTypeValidation    = false // default is true
  addIncludeType            = false // default is true
  addSelectType             = false // default is true
  // validateWhereUniqueInput         = true // default is false
  // createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes = true // default is false
  // createPartialTypes               = true // default is false
  //  useDefaultValidators      = false // default is true
  coerceDate                = false // default is true
  writeNullishInModelTypes  = true // default is false
  // prismaClientPath                 = "./generated/client" // optional
  extendZod = "../../../../../zod-openapi/extend-zod"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id           Int           @id @default(autoincrement())
  name         String        @unique()
  users        User[]
  userProfiles UserProfile[]
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  tenantId Int
  tenant   Tenant  @relation(fields: [tenantId], references: [id])

  userProfile UserProfile?
}

model UserProfile {
  id Int @id @default(autoincrement())

  fullName String

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  tenantId Int
  tenant   Tenant @relation(fields: [tenantId], references: [id])
}
